pipeline {
  agent any

  options {
    disableConcurrentBuilds()
    skipDefaultCheckout()
  }

  parameters{
    booleanParam(name: 'CONFIRM', defaultValue: false, description: 'Run bootstrap?')
  }
  
  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build Jekyll Image') {
      when {
        expression { params.CONFIRM }
      }

      steps {
        sh 'docker build -t portfolio-jekyll:latest -f ./pipelines/jekyll.Dockerfile .'
      }
    }

    stage('Deploy Compose Stack') {
      when {
        expression { params.CONFIRM }
      }

      steps {
        withCredentials(string(credentialsId: 'wakatime_token', variable: 'WAKATIME_API_KEY')) {
          sh '''
            env WAKATIME_API_KEY=$WAKATIME_API_KEY \
            env COMPOSE_PROJECT_NAME=portfolio-website \
            docker compose -f ./pipelines/docker-compose.yml up -d
          '''
        }
      }
    }
  }
}